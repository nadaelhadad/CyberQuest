import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { useNavigate } from 'react-router-dom';
import { Terminal, Globe, Shield, ArrowRight } from 'lucide-react';
import Button from './Button';
import MeshBackground from './MeshBackground';

interface WebExploitIntroProps {
  onComplete: () => void;
}

const WebExploitIntro: React.FC<WebExploitIntroProps> = ({ onComplete }) => {
  const [currentStep, setCurrentStep] = useState(0);
  const [showButton, setShowButton] = useState(false);
  const navigate = useNavigate();

  const steps = [
    {
      icon: <Globe className="w-8 h-8 text-cyber-blue-400" />,
      title: "Web Exploitation",
      description: "Welcome to the Web Exploitation module. Here, you'll learn to uncover hidden vulnerabilities in web applications and discover secrets buried in plain sight."
    },
    {
      icon: <Terminal className="w-8 h-8 text-cyber-purple-400" />,
      title: "Source Code Secrets",
      description: "Every web page holds secrets in its source code. Comments, hidden elements, and deprecated paths often contain valuable information for those who know where to look."
    },
    {
      icon: <Shield className="w-8 h-8 text-cyber-yellow" />,
      title: "Developer's Trail",
      description: "Follow the breadcrumbs left by developers. Their notes and comments can lead you to hidden endpoints and secret pages that aren't meant to be found."
    }
  ];

  useEffect(() => {
    if (currentStep < steps.length) {
      const timer = setTimeout(() => {
        setCurrentStep(prev => prev + 1);
      }, 3000);
      return () => clearTimeout(timer);
    } else {
      setShowButton(true);
    }
  }, [currentStep]);

  const handleComplete = () => {
    onComplete();
  };

  return (
    <div className="min-h-screen bg-cyber-black text-white flex items-center justify-center p-4">
      <MeshBackground />
      <div className="max-w-2xl w-full">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="bg-cyber-black/80 border border-cyber-purple-500/30 rounded-lg p-8 shadow-lg shadow-cyber-purple-500/10"
        >
          <div className="space-y-8">
            {steps.map((step, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, x: -20 }}
                animate={{ 
                  opacity: currentStep >= index ? 1 : 0,
                  x: currentStep >= index ? 0 : -20
                }}
                transition={{ duration: 0.5 }}
                className={`flex items-start gap-4 ${
                  currentStep === index ? 'text-cyber-purple-200' : 'text-cyber-gray-400'
                }`}
              >
                <div className="mt-1">{step.icon}</div>
                <div>
                  <h3 className="text-lg font-bold mb-2">{step.title}</h3>
                  <p className="text-sm leading-relaxed">{step.description}</p>
                </div>
              </motion.div>
            ))}
          </div>

          {showButton && (
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              className="mt-8 flex justify-end"
            >
              <Button
                onClick={handleComplete}
                className="bg-gradient-to-r from-cyber-purple-600 to-cyber-blue-600 hover:from-cyber-purple-500 hover:to-cyber-blue-500 text-white px-6 py-2 rounded-lg transition-all duration-300 transform hover:scale-105 hover:shadow-lg hover:shadow-cyber-purple-500/20 font-semibold flex items-center gap-2"
              >
                <span>Begin Challenge</span>
                <ArrowRight className="w-4 h-4" />
              </Button>
            </motion.div>
          )}
        </motion.div>
      </div>
    </div>
  );
};

export default WebExploitIntro; 